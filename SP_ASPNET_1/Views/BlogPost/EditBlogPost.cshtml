@model SP_ASPNET_1.Models.BlogPost

@{
    ViewBag.Title = "EditBlogPost";
}

<h2>EditBlogPost</h2>

@using (Html.BeginForm("Edit", "BlogPost", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BlogPost</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BlogPostID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" onclick="Save()"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/axios.min.js"></script>
    <script>

        function Save() {

            var BlogPost = {};
            BlogPost.BlogPostID = @Model.BlogPostID;
            BlogPost.Title = document.querySelector("#Title").value;
            BlogPost.DateTime = document.querySelector("#DateTime").value;
            BlogPost.Content = document.querySelector("#Content").value;
            BlogPost.ImageUrl = document.querySelector("#ImageUrl").value;

            axios({
                method: 'post',
                url: '/Blog/Edit/' + BlogPost.BlogPostID,
                headers: { 'content-type': 'application/json; charset=utf-8' },
                data: '{BlogPost: ' + JSON.stringify(BlogPost) + '}'
            }).then(function (response) {
                // handle success
                alert(response.data.ResultState);
                if (response.data.ResultState == "Success") {
                    window.location.href = '/Blog/Detail/' + BlogPost.BlogPostID;
                }
            }).catch(function (error) {
                // handle error
                alert(error);
            }).then(function () {
                // always executed
            });
        }
    </script>
}
